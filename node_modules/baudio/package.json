{
  "name": "baudio",
  "version": "1.1.2",
  "description": "generate audio streams with functions",
  "main": "index.js",
  "directories": {
    "example": "example"
  },
  "dependencies": {
    "inherits": "~1.0.0",
    "readable-stream": "~1.1.8"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/baudio.git"
  },
  "homepage": "https://github.com/substack/baudio",
  "keywords": [
    "audio",
    "raw",
    "sound",
    "wav",
    "sine",
    "stream"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# baudio\n\ngenerate audio streams with functions\n\n![oscilloscope](http://substack.net/images/oscilloscope.png)\n\n# videos\n\n[the science and mathematics of music](http://www.youtube.com/watch?v=i_0DXxNeaQ0)\n\n[making algorithmic music with baudio](http://www.youtube.com/watch?v=2oz_SwhBixs)\n\n# example\n\n``` js\nvar baudio = require('baudio');\n\nvar n = 0;\nvar b = baudio(function (t) {\n    var x = Math.sin(t * 262 + Math.sin(n));\n    n += Math.sin(t);\n    return x;\n});\nb.play();\n```\n\n# methods\n\n``` js\nvar baudio = require('baudio')\n```\n\n## var b = baudio(opts, fn)\n\nReturn a readable stream of raw audio data based on the channel functions\nprovided. Passing `fn` is a short-hand for `b.push(fn)`.\n\nThe `opts.rate` is the rate of the output stream in Hz, default 44000.\n\n## b.push(ix=0, fn)\n\nPush a new track onto the channel at index `ix` with the function `fn(t, i)` for\nthe time in seconds `t` and a counter `i`.\n\n## b.addChannel(type, fn)\n\nPush a new audio channel of `type`, optionally initializing the channel with a\nfunction `fn(t, i)`.\n\n`type` defaults to `'float'` which expects inputs in the range `[-1,1]` and\nclips higher and lower values.\n\n`type` can also be a power of 2 number of bits to use for each sample which\nexpects an integer output value in `[0,Math.pow(2,type)-1]`.\n\n\n## b.play(opts)\n\nPlay the audio demo with the [play command](http://sox.sourceforge.net/).\n\nYou can also call `b.pipe()` to handle the output stream yourself.\n\n`opts` are passed directly through to sox.\n\n## b.record(file, opts)\n\nSave the audio stream to `file` using the\n[sox command](http://sox.sourceforge.net/).\n\nYou can also call `b.pipe()` to handle the output stream yourself.\n\n`opts` are passed directly through to sox.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install baudio\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/baudio/issues"
  },
  "_id": "baudio@1.1.2",
  "dist": {
    "shasum": "7ba5bf9947a95c513187732a108bf87ab39152a8"
  },
  "_from": "baudio@",
  "_resolved": "https://registry.npmjs.org/baudio/-/baudio-1.1.2.tgz"
}
